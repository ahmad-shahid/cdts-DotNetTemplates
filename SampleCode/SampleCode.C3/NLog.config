<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log" >

  <extensions>
    <add assembly="NLog.CustomExtendedService"  />
  </extensions>
  <!-- optional, add some variabeles
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!-- 
  See https://github.com/nlog/nlog/wiki/Configuration-file 
  for information on customizing logging rules and outputs.
   -->
  
  <!--
  =====================================================================================
  Scenario 1: Log all level messages, for all classes, to a file
  =====================================================================================-->
<!--
  <targets>
    <target xsi:type="File" name="logToFile" fileName="${basedir}/logs/NLogSample - ${machinename} - ${shortdate}.log"
         layout="${longdate}|${machinename}|${uppercase:${level}}|${uppercase:${logger}}|${threadid}|${message} ${exception:format=tostring}"/>
  </targets>
  <rules>
    <logger name="*" minlevel="Debug" writeTo="logToFile" />
  </rules>
-->
  <!--
  =====================================================================================
  Scenario 2: Log Error (and up) level messages, for all classes, to a file
  =====================================================================================-->
  <!--
  <targets>
    <target xsi:type="File" name="logToFile" fileName="${basedir}/logs/NLogSample - ${machinename} - ${shortdate}.log"
         layout="${longdate}|${machinename}|${uppercase:${level}}|${uppercase:${logger}}|${threadid}|${message} ${exception:format=tostring}"/>
  </targets>
  <rules>
    <logger name="*" minlevel="Error" writeTo="logToFile" />
  </rules>
-->
  <!--
  =====================================================================================
  Scenario 3: Log different level messages for different classes, to separate files
  =====================================================================================-->
  <!--
  <targets>
    <target xsi:type="File" name="logToFile" fileName="${basedir}/logs/NLogSample - ${machinename} - ${shortdate}.log"
         layout="${longdate}|${machinename}|${uppercase:${level}}|${uppercase:${logger}}|${threadid}|${message} ${exception:format=tostring}"/>

    <target xsi:type="File" name="logToPersonFile" fileName="${basedir}/logs/PersonClass - ${machinename} - ${shortdate}.log"
         layout="${longdate}|${machinename}|${uppercase:${level}}|${uppercase:${logger}}|${threadid}|${message} ${exception:format=tostring}"/>
  </targets>
  <rules>
    <logger name="SampleCode.C3.NLogSample.NLogSample" minlevel="Warn" writeTo="logToFile" />
    <logger name="SampleCode.C3.NLogSample.Person" minlevel="Trace" writeTo="logToPersonFile" />
  </rules>
  -->
  <!--
  =====================================================================================
  Scenario 4: Log all errors to a database stored procedure
  =====================================================================================-->
<!--
  <targets>
    <target xsi:type="Database"
          name="logToDB"
          keepConnection="false"
          useTransactions="true"
          dbProvider="Oracle.DataAccess.Client.OracleConnection, Oracle.DataAccess, Version=4.112.3.0, Culture=neutral, PublicKeyToken=89b483f429c47342"
          connectionString="Data Source=DEV184.WORLD;User Id=SF_DEV;Password=SF_DEV;"
          commandText="LOG_PKG.INSERT_LOG"
          commandType="StoredProcedure">
      <parameter name="pi_logLevel" layout="${level}" />
      <parameter name="pi_logLogger" layout="${logger}" />
      <parameter name="pi_Mlogessage" layout="${message}" />
      <parameter name="pi_logDate" layout="${date:format=yyyy-MM-dd HH\:mm\:ss}" />
      <parameter name="pi_MachineName" layout="${machinename}" />
    </target>
  </targets>
  <rules>
    <logger name="*" minlevel="Trace" writeTo="logToDB" />
  </rules>
-->
  <!--
  =====================================================================================
  Scenario 5: Log all errors to a database stored procedure with a fallback to file
  =====================================================================================-->
<!--
  <targets>
    <target xsi:type="FallbackGroup" name="logToDBWithFallBack" returnToFirstOnSuccess="true">
      <target xsi:type="Database"
            name="logToDB"
            keepConnection="false"
            useTransactions="true"
            dbProvider="Oracle.DataAccess.Client.OracleConnection, Oracle.DataAccess, Version=4.112.3.0, Culture=neutral, PublicKeyToken=89b483f429c47342"
            connectionString="Data Source=DEV184.WORLD;User Id=SF_DEV;Password=SF_DEV;"
            commandText="LOG_PKG.INSERT_LOG"
            commandType="StoredProcedure">
        <parameter name="pi_logLevel" layout="${level}" />
        <parameter name="pi_logLogger" layout="${logger}" />
        <parameter name="pi_Mlogessage" layout="${message}" />
        <parameter name="pi_logDate" layout="${date:format=yyyy-MM-dd HH\:mm\:ss}" />
        <parameter name="pi_MachineName" layout="${machinename}" />
      </target>

      <target xsi:type="File" name="logToFile" fileName="${basedir}/logs/NLogSample - ${machinename} - ${shortdate}.log"
         layout="${longdate}|${machinename}|${uppercase:${level}}|${uppercase:${logger}}|${threadid}|${message} ${exception:format=tostring}"/>
    </target>
  </targets>
  <rules>
    <logger name="*" minlevel="Debug" writeTo="logToDBWithFallBack" />
  </rules>
-->
  <!--
  =====================================================================================
  Scenario 6: Log messages to a WCF service
    -The rules are defined as follows, to prevent an indefinate loop
    -the web page "NLogSample.aspx" will log to the service "LoggingServiceSample.svc"
    -the Service will log to a file named "LoggingServiceSample-[machinename]-[shortdate].log"
  =====================================================================================-->

  <targets>
    <target xsi:type="WebService" name="logToService" 
            namespace="http://tempuri.org/" 
            protocol="Soap11" 
            methodName="LogMe" 
            url="http://localhost:4585/Samples/NLog.C3.Sample/LoggingServiceSample.svc"
            endpointConfigurationName="WSHttpBinding_ILogReceiverServer"
            endpointAddress="http://localhost:4585/Samples/NLog.C3.Sample/LoggingServiceSample.svc"
            ServiceUsername="your_username_here"
            ServicePassword="your_password_here">
      <parameter name="message" type="System.String" layout="${message}"/>
      <parameter name="logger" type="System.String" layout="${logger}"/>
      <parameter name="level" type="System.String" layout="${level}"/>
      <parameter name="callerID" type="System.String" layout="TFW123"/>
    </target>

    <target xsi:type="File" name="logToFile" fileName="${basedir}/logs/LoggingServiceSample - ${machinename} - ${shortdate}.log"
         layout="${longdate}|${machinename}|${uppercase:${level}}|${uppercase:${logger}}|${threadid}|${message} ${exception:format=tostring}"/>
  </targets>
  <rules>
    <logger name="SampleCode.C3.NLogSample.NLogSample" minlevel="Debug" writeTo="logToService" />
    <logger name="SampleCode.C3.NLogSample.Person" minlevel="Debug" writeTo="logToService" />
    <logger name="SampleCode.C3.NLogSample.LoggingServiceSample" minlevel="Trace" writeTo="logToFile" />
  </rules>

  <!--
  =====================================================================================
  Scenario 7: Log message to a WCF service with a fallback to file
    -The rules are defined as follows, to prevent an indefinate loop
    -the web page "NLogSample.aspx" will log to the service "LoggingServiceSample.svc"
    -if the call to the service fails, the web page will log to a file named "NLogSample-[machinename]-[shortdate].log"
    -the Service will log to a file named "LoggingServiceSample-[machinename]-[shortdate].log"
  =====================================================================================-->
<!--
  <targets>
    <target xsi:type="FallbackGroup" name="logToServiceWithFallBack" returnToFirstOnSuccess="true">
      <target xsi:type="WebService" name="logToService" namespace="http://tempuri.org/" protocol="Soap11" methodName="LogMe" url="http://localhost:4585/Samples/NLog.C3.Sample/LoggingServiceSample2.svc">
        <parameter name="message" type="System.String" layout="${message}"/>
        <parameter name="logger" type="System.String" layout="${logger}"/>
        <parameter name="level" type="System.String" layout="${level}"/>
        <parameter name="callerID" type="System.String" layout="TFW123"/>
      </target>

      <target xsi:type="File" name="logToFallBackFile" fileName="${basedir}/logs/NLogSample - ${machinename} - ${shortdate}.log"
         layout="${longdate}|${machinename}|${uppercase:${level}}|${uppercase:${logger}}|${threadid}|${message} ${exception:format=tostring}"/>
    </target>

    <target xsi:type="File" name="logToFile" fileName="${basedir}/logs/LoggingServiceSample - ${machinename} - ${shortdate}.log"
         layout="${longdate}|${machinename}|${uppercase:${level}}|${uppercase:${logger}}|${threadid}|${message} ${exception:format=tostring}"/>
    
  </targets>
  <rules>
    <logger name="SampleCode.C3.NLogSample.NLogSample" minlevel="Debug" writeTo="logToServiceWithFallBack" />
    <logger name="SampleCode.C3.NLogSample.Person" minlevel="Debug" writeTo="logToServiceWithFallBack" />
    <logger name="SampleCode.C3.NLogSample.LoggingServiceSample" minlevel="Trace" writeTo="logToFile" />
  </rules>
  -->
</nlog>